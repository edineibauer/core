<?php
ob_start();
require_once './_config/config.php';
require_once './vendor/autoload.php';

use Core\Route;
use Core\Check;

/** RESPONSES
 * 1 -> rota encontrada e corretamente executada
 * 2 -> rota encontrada e erro encontrado
 * 3 -> redirecionamento
 * 4 -> rota não encontrada
 * outro -> não faz nada
 * */

$file = filter_input(INPUT_POST, 'file', FILTER_DEFAULT);
$lib = filter_input(INPUT_POST, 'lib', FILTER_DEFAULT);
$data = ["response" => 2, "error" => "", "data" => ""];

if (empty($file) && empty($lib)) {
    $url = strip_tags(trim($_GET['data']));
    $route = new Route($url, 'ajax');
    if ($route->getRoute())
        $include = $route->getRoute();
} else {
    $include = PATH_HOME . VENDOR . $lib . "/ajax/" . $file . ".php";
}

if (isset($include)) {
    if (\Helper\Validate::ajax()) {

        ob_start();
        try {
            include_once $include;

            if (!empty($data['error'])) {
                $data["response"] = 2;
                $data["data"] = "";
            } else {
                if (!isset($data['data']))
                    $data = ["response" => 1, "error" => "", "data" => ob_get_contents()];

                if (preg_match('/^http/i', $data['data']))
                    $data["response"] = 3;

                if (!isset($data['response']))
                    $data['response'] = 1;

                if ($data['response'] === 3 && (!is_string($data['data']) || !preg_match("/^http/i", $data['data'])))
                    $data = ["response" => 2, "error" => "url de redirecionamento não é válido", "data" => ""];

                var_dump($data);
            }
        } catch (Exception $e) {
            $data = ["response" => 2, "error" => "Erro na resposta do Servidor", "data" => ""];
        }
        ob_end_clean();
    } else {
        $data = ["response" => 2, "error" => "request nao permitido", "data" => ""];
    }
} else {
    $data["response"] = 4;
}

echo json_encode($data);

ob_get_flush();
